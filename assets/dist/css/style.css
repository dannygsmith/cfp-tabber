/*
	Name: CampFirePixels Tabber
	URI: https://campfirepixels.com/
	Description: This is a responsive Tabber that converts to Accordion
	Author: Danny G Smith
	Author URI: https://campfirepixels.com/

	Version: 0.1.1

	License: GPL-2.0+
	License URI: http://www.gnu.org/licenses/gpl-2.0.html
*/
.dashicons, .dashicons-before:before {
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
  -webkit-transition: color .1s ease-in 0;
  display: inline-block;
  font-family: dashicons;
  font-size: 16px;
  font-style: normal;
  font-weight: 400;
  height: unset;
  line-height: 1;
  text-align: left;
  text-decoration: inherit;
  transition: color .1s ease-in 0;
  vertical-align: top;
  width: 100%;
}

.tabber-wrapper {
  font-family: 'Lato', sans-serif;
  font-weight: 400;
  position: relative;
  margin-bottom: 70px;
}

.tabber--container {
  margin: 0;
  padding: 0;
  width: 100%;
}

.tabber--tab {
  background-color: #ccc;
  color: #333;
  padding: 6px 15px;
  font-weight: bold;
  text-transform: uppercase;
  border: 1px solid #aaa;
  border-bottom: 1px solid #ccc;
  width: 100%;
}

.tabber--content {
  margin: 0;
  background: #eee;
  padding: 20px;
  border-left: 1px solid #ccc;
  border-right: 1px solid #ccc;
  border-bottom: 1px solid #ccc;
}

@media only screen and (min-width: 768px) {
  .tabber-wrapper {
    position: relative;
    margin-bottom: 70px;
  }
  .tabber--container {
    -webkit-margin-after: 0;
    -webkit-margin-before: 0;
    display: -webkit-inline-box;
    display: -ms-inline-flexbox;
    display: inline-flex;
    -ms-flex-wrap: nowrap;
    flex-wrap: nowrap;
    -webkit-box-pack: start;
    -ms-flex-pack: start;
    justify-content: flex-start;
    margin: 0;
    padding: 0;
    width: auto;
  }
  .tabber--tab {
    background-color: #eee;
    border: 1px solid #ccc;
    border-top-left-radius: 5px;
    border-top-right-radius: 5px;
    cursor: pointer;
    display: inline;
    margin-right: 2px;
    padding: 6px 15px;
    vertical-align: top;
  }
  .tabber--content {
    -webkit-margin-start: 0;
    background-color: #ddd;
    border: 1px solid #ccc;
    color: #333;
    left: 0;
    overflow: hidden;
    padding: 20px;
    position: absolute;
    top: 100%;
    width: 100%;
    z-index: 99;
  }
}

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
